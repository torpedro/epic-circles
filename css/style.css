html,
body {
	width: 100%;
	height: 100%;
	margin: 0px;
	padding: 0px;
	text-align: center;
	font-family: 'Open Sans', sans-serif;
	font-weight: 400;
	font-size: 12px;
	overflow: hidden;
}

a {
	color: rgb(12, 113, 180);
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}

div {
	margin: 0px auto;
	padding: 0px;
}

.footer {
	position: absolute;
	width: 100%;
	text-align: center;
	bottom: 30px;
}

#settings {
	position: absolute;
	left: 0px;
	top: 0px;
	background: white;
	border-right: 1px solid #555;
	border-bottom: 1px solid #555;
	padding: 5px 15px;
	text-align: left;
}

#settings > label {
	display: block;
}

#presetLoader {
	position: absolute;
	right: 0px;
	top: 0px;
	background: white;
	border-left: 1px solid #555;
	border-bottom: 1px solid #555;
	padding: 5px 15px;
}

#presetLoader > a {
	display: block;
	text-align: left;
	padding: 4px 0px;
}


#contextMenu {
	position: absolute;
	display: none;
	background: white;
	border: 1px solid rgba(0, 0, 0, 0.5);
	padding: 0px;
	border-radius: 5px;
}


#contextMenu a {
	display: block;
	background: white;
	border: 0px;
	padding: 5px 15px;
	border-bottom: 1px solid rgba(0, 0, 0, 0.5);
	cursor: pointer;
	border-radius: 5px;
}

#contextMenu a:last-of-type {
	border-bottom: 0px;
}

#contextMenu a:hover {
	background: #f2f2f2;
}

.contextMenuWrapper {
	/*border: 1px solid rgba(0, 0, 0, 0.5);*/
}

/**
 * Style for SVG
 */
.canvas {
	/*border: 1px solid #444444;*/
	width: 100%;
	height: 100%;
	background: #eee;
}

.canvas > svg {
	margin: 0px;
	padding: 0px;
	cursor: -moz-grab;
	cursor: -webkit-grab;
	cursor: grab;
}
.canvas > svg.grabbed {
	cursor: -moz-grabbing;
	cursor: -webkit-grabbing;
	cursor: grabbing;
}

svg circle,
svg line,
svg polygon {
	fill: none;
	stroke-width: 1px;
	stroke: black;
}

svg > .background {
	/*visibility: hidden;*/
	/*fill: ;*/
	opacity: 0.0;
}

.grid line {
	stroke: #aaa;
	stroke-dasharray: 2, 2;
}


/* Inversion Circle */
g.circle.inversion > .circle {
	stroke: rgb(117, 0, 0);
	cursor: e-resize;
}

g.circle.inversion > .origin {
	stroke: rgb(117, 0, 0);
	fill: rgba(255, 0, 0, 0.2);
	cursor: pointer;
}


/**
 * Move Handlers for Circles, Lines and Polygons
 */
g.line.normal > .origin,
g.circle.normal > .origin,
g.polygon.normal > .origin {
	stroke: rgba(0, 0, 0, 0.8);
	fill: rgba(0, 0, 255, 0.2);
	cursor: pointer;
}

g.line.inverted > .origin,
g.circle.inverted > .origin,
g.polygon.inverted > .origin {
	/* Hide the origin of inverted shapes */
	visibility: hidden;
}

/**
 * Rotate Handler
 */
g.line.normal > .rotator,
g.circle.normal > .rotator,
g.polygon.normal > .rotator {
	stroke: rgba(0, 0, 0, 0.8);
	fill: rgba(255, 255, 0, 0.2);
	cursor: pointer;
}

g.line.inverted > .rotator,
g.circle.inverted > .rotator,
g.polygon.inverted > .rotator {
	/* Hide the origin of inverted shapes */
	visibility: hidden;
}



/* Circle */
g.circle.normal > .circle {
	stroke: #888;
	cursor: pointer;
}

g.circle.inverted > .circle {
	stroke: rgba(0, 0, 0, 0.7);
}

/* Polygon */
g.polygon.normal > polygon {
	stroke: #888;
}

g.polygon.inverted > polygon {

}

/* Line */
g.line.normal > line {
	stroke: #888;
}

g.line.inverted > line {
}

.circleSegment {
	stroke: black;
}